import { Router } from 'express';
import * as controller from '../controllers/users.controller.js';
import { body } from 'express-validator';
import checkAuth from '../middlewares/auth.middleware.js';

const router = Router();

/**
 * –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å Error Handler –≤ —Ä–æ—É—Ç–∏–Ω–≥–µ –Ω–∞–ø—Ä–∏–º–µ—Ä–µ:
 * app.post('/testing', async (err, req, res, next) => {
    return next(new Error('Something broke again! üò±'))
})
 */

/**
 * –ú–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ–µ –º–∏–¥–¥–µ–ª–≤–∞—Ä–µ, –ª–∏–±–æ –≤ –æ–¥–∏–Ω –ø—Ä–æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–∏–ø—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–∫–∞–º–∏ –∏–ª–∏ –∂–µ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –±–ª–æ–∫–µ catch –º–∏–¥–¥–µ–ª–≤–∞—Ä–µ –¥–ª—è –æ—à–∏–±–æ–∫, –∏ —Ç–∞–º –∂–µ –≤ try validationErrors –¥–ª—è express-validator
 * router.get(api, ...middlewares)
 */


/** 
 * @desc Get all list
 * @route GET /api/users/
 * @access public
*/

router.get('/', checkAuth, controller.getUsers);

// tokens
router.get('/activation/:link', controller.activation);
router.get('/refresh', controller.refresh);
router.post('/signup',
    body('email').isEmail(),
    body('password').isLength({ min: 5, max: 32 }),
    controller.signup
);
router.post('/login', controller.login);
router.post('/logout', controller.logout);

export default router;

