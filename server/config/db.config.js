import mongoose from 'mongoose';
import model from './../models/index.js';
import fs from 'fs';
import dotenv from 'dotenv';
dotenv.config()

const { DATABASE_MONGODB_URL } = process.env

// const DATABASE_MONGODB_DOCKER = `mongodb://mongo:27017`

const connectionDB = async () => {
    try {
        const conn = await mongoose.connect(DATABASE_MONGODB_URL)

        console.log(`[MongoDB] DB connected: ${conn.connection.host}:${conn.connection.port}`.green.bold)


        // importDataToDB();
        
        console.log(`–í—Å–µ –≥–æ—Ç–æ–≤–æ!üî•`)
    } catch (err) {
        console.error(`Error: ${err.message}ü§¢`.red.underline.bold)
        process.exit(1)
    }
}


const usersData = JSON.parse(fs.readFileSync('./data/users.json'))
const clientsData = JSON.parse(fs.readFileSync('./data/clients.json'))

const importDataToDB = async () => {
    try {
        const usersExist = await model.Users.exists() //req.body.email –Ω–µ—Ç –ø–æ—Ç–æ–º—É —á—Ç–æ –º—ã –±–µ—Ä–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ { email: email }
        const clientsExist = await model.Clients.exists()
        if (usersExist === null) {
            await model.Users.create(usersData)
            console.log('Users –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
        } else {
            console.log('Users —É–∂–µ –µ—Å—Ç—å –≤ –ë–î')
        }


        if (clientsExist === null) {
            await model.Clients.create(clientsData)
            console.log('Clients –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
        } else {
            console.log('Clients —É–∂–µ –µ—Å—Ç—å –≤ –ë–î')
        }


    } catch (err) {
        console.log('[ERROR]', err)
    }
}



export default connectionDB;